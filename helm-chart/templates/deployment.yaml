apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot-api.fullname" . }}
  labels:
    {{- include "spring-boot-api.labels" . | nindent 4 }}
  annotations:
    configuration_sha: {{ tpl (print $.Template.BasePath "/configmap.yaml" "/secret.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "spring-boot-api.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        configuration_sha: {{ tpl (print $.Template.BasePath "/configmap.yaml" "secret.yaml") . | sha256sum }}
      labels:
        {{- include "spring-boot-api.selectorLabels" . | nindent 8 }}
    spec:          
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # TODO: Pass profile as agrument, but no spring boot exists - this can be done for java by set env SPRING_PROFILES_ACTIVE as alterantive
          command: ['sh', '-c', 'echo "Hello" > /var/www/index.html && httpd -f -p 8080 -h /var/www/']
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.spring.profile }}
          envFrom:
            - secretRef:
                name: {{ include "spring-boot-api.fullname" . }}-secret
          ports:
            - name: http-api
              containerPort: 8080
              protocol: TCP
            - name: http-logs
              containerPort: 8081
              protocol: TCP
            - name: http-soap
              containerPort: 8082
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http-api
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http-api
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "wget", http://localhost:8080/service/shutdown"]
          volumeMounts:
            - name: config-volume
              mountPath: /app
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "spring-boot-api.fullname" . }}-configmap